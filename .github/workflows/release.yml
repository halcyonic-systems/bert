name: "Release Desktop App"

permissions:
  contents: write
  actions: read
  packages: write
  pull-requests: write

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v0.2.0)'
        required: true
        default: 'v0.2.0'

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # Intel Macs (works on ARM Macs via Rosetta 2)
            args: '--target x86_64-apple-darwin --bundles app,dmg'
          - platform: 'ubuntu-22.04' # Linux
            args: '--bundles deb,appimage'
          - platform: 'windows-latest' # Windows
            args: '--bundles msi,nsis'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'x86_64-apple-darwin' || '' }}

      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown

      - name: Add macOS Intel target
        if: matrix.platform == 'macos-latest'
        run: rustup target add x86_64-apple-darwin

      - name: Install Tauri CLI
        run: cargo install tauri-cli --version "^2.0.0"

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install frontend dependencies
        run: npm ci

      - name: Install trunk
        uses: jetli/trunk-action@v0.5.0
        with:
          version: 'v0.20.3'

      - name: Generate macOS icons (macOS only)
        if: matrix.platform == 'macos-latest'
        run: |
          cd src-tauri/icons
          if [ ! -f icon.icns ]; then
            sips -s format icns icon.png --out icon.icns
          fi

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.event.inputs.version || github.ref_name }} # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'BERT ${{ github.event.inputs.version || github.ref_name }}'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}